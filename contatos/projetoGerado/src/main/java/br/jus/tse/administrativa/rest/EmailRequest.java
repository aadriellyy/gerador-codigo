  






 /*
* Created on 2024-10-30 ( 11:31:29 )
* Generated by Telosys ( https://www.telosys.org/ ) version 4.1.0
*/ 












package br.jus.tse.administrativa.rest;


import java.time.LocalDate;
import java.util.Collections;
import java.util.HashSet;
import java.util.Set;
import java.util.Objects;
      
import com.fasterxml.jackson.annotation.JsonProperty;

import jakarta.validation.ConstraintViolation;
import jakarta.validation.Validation;
import jakarta.validation.Validator;
import jakarta.validation.ValidatorFactory;
import jakarta.validation.constraints.NotBlank;
import jakarta.validation.constraints.NotNull;
import br.jus.tse.administrativa.Email;

                         
import br.jus.tse.administrativa.PessoaFisica;


public class EmailRequest {

     
    @NotNull(groups = {ValidOnUpdate.class}, message = "idEmail de Email está invalido.")
    @JsonProperty("idEmail")
    private Long idEmail;

    @NotNull(groups = {ValidOnCreation.class, ValidOnUpdate.class}, message = "cxEmail de Email está invalido.")
    @JsonProperty("cxEmail")
    private String cxEmail;

    public Email transform(PessoaFisica pessoafisica){
        Email objEmail = new Email(  this.idEmail,  this.cxEmail,    pessoafisica);
        return objEmail;
    }

     
    public void setIdEmail( Long idEmail ) {
        this.idEmail = idEmail ;
    }
    public Long getIdEmail() {
        return this.idEmail;
    }
           
    public void setCxEmail( String cxEmail ) {
        this.cxEmail = cxEmail ;
    }
    public String getCxEmail() {
        return this.cxEmail;
    }

        
    @Override
    public String toString() {
        return "EmailDTO [                                                              idEmail=" + idEmail + ",   cxEmail=" + cxEmail + "]";
      }

                           
    @Override
    public int hashCode(){ return Objects.hash(idEmail, cxEmail); }

    @Override
    public boolean equals (Object obj){
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        EmailRequest other = (EmailRequest) obj;

        return
                 Objects.equals(this.idEmail, other.idEmail) &&          Objects.equals(this.cxEmail, other.cxEmail);     }

    public Set< String >isValidOnStage (Class<?> stage) {
        ValidatorFactory factory = Validation.buildDefaultValidatorFactory();
        Validator validator = factory.getValidator();


        Set< ConstraintViolation< EmailRequest >>violacoes = validator.validate(this, stage);

        if (violacoes.isEmpty()) {
            return Collections.emptySet();
        }

        Set< String > violations = new HashSet<>() ;
        violacoes.forEach((violacao)->{
            violations.add(violacao.getMessageTemplate());
        });

        return violations;
    }

    public String logString() {
        return ("Adicione uma implmenentação adequada.");
    }

}